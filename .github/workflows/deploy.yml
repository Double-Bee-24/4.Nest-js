name: Deploy to AWS EC2

on:
  push:
    branches: [main] # Adjust this to your main branch name

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.AWS_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.AWS_HOST }} >> ~/.ssh/known_hosts

      - name: Build and push Docker images
        run: |
          # Create a deployment package
          tar -czf deploy.tar.gz docker-compose.prod.yml Dockerfile.prod server/conf client/dist

      - name: Deploy to EC2
        run: |
          # Copy deployment package to EC2
          scp deploy.tar.gz ${{ secrets.AWS_USERNAME }}@${{ secrets.AWS_HOST }}:~/

          # Create .env file from secret
          echo "${{ secrets.ENV_FILE_CONTENT }}" | base64 -d > server.env
          scp server.env ${{ secrets.AWS_USERNAME }}@${{ secrets.AWS_HOST }}:~/server.env

          # SSH into EC2 and deploy
          ssh ${{ secrets.AWS_USERNAME }}@${{ secrets.AWS_HOST }} << 'EOF'
            # Extract the deployment package
            mkdir -p ~/deploy
            tar -xzf deploy.tar.gz -C ~/deploy
            
            # Move the .env file to the correct location
            mkdir -p ~/deploy/server
            mv ~/server.env ~/deploy/server/.env
            
            # Run docker-compose
            cd ~/deploy
            docker-compose -f docker-compose.prod.yml down
            docker-compose -f docker-compose.prod.yml up -d --build
            
            # Cleanup
            rm ~/deploy.tar.gz
          EOF
